input {
  tcp {
    port => 5000
    codec => json
  }
}

filter {
  prune {
    blacklist_names => ["headers", "host"]
  }

  if [event] == "Send exception" {
    aggregate {
      task_id => "%{userid}_%{application}_%{message}_%{filename}_%{line}"
      code => "
        require 'time'

        map['userid'] ||= event.get('userid');
        map['application'] ||= event.get('application');
        map['message'] ||= event.get('message');
        map['filename'] ||= event.get('filename');
        map['line'] ||= event.get('line');
        map['task'] ||= event.get('task');

        map['error_count'] ||= 0;
        map['error_count'] += 1;

        map['aggregated_message'] ||= '';
        time = Time.strptime(event.get('timestamp').to_s,'%Q').localtime('+03:00')
        map['aggregated_message'] += time.to_s + '\n' +  event.get('stack') + '\n\n\n';"

      timeout => 3600
      timeout_tags => ['send_email_notification']
      push_map_as_event_on_timeout => true
    }
  }

  date {
    match => ["timestamp", "UNIX", "UNIX_MS"]
  }
}

output {
  stdout {
    codec => rubydebug
  }

  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "cvat-client"
  }
}
